generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id
  contact_id        String  @unique(map: "sqlite_autoindex_account_2") @map("contact")
  cosigner          String?
  dateOfBirth       String? @map("date_of_birth")
  licenseNumber     String  @unique(map: "sqlite_autoindex_account_3") @map("license_number")
  licenseExpiration String? @map("license_expiration")
  dateAdded         String? @default("CURRENT_TIMESTAMP") @map("date_added")
  dateModified      String? @default("CURRENT_TIMESTAMP") @map("date_modified")
  currentStanding   String? @map("current_standing")
  notes             String?
  contact           Person  @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  deals             Deal[]  @relation("deal_accountToaccount")

  @@unique([contact_id, cosigner], map: "sqlite_autoindex_account_4")
  @@map("account")
}

model Charge {
  id             String          @id
  name           String
  amount         String
  dateEffective  String          @map("date_effective")
  dealCharges    DealCharge[]    @relation("deal_charge_chargeTocharge")
  defaultCharges DefaultCharge[] @relation("default_charge_chargeTocharge")

  @@unique([name, amount], map: "sqlite_autoindex_charge_2")
  @@map("charge")
}

model City {
  id           String @id
  city         String
  state        String
  zip          String
  abbreviation String

  @@unique([city, state], map: "sqlite_autoindex_city_2")
  @@index([state(sort: Desc)], map: "i_city_state")
  @@map("city")
}

model Creditor {
  id             String          @id
  businessName   String          @unique(map: "sqlite_autoindex_creditor_2") @map("business_name")
  contactId      String          @map("contact")
  filingFees     String          @map("filing_fees")
  dateAdded      String?         @default("CURRENT_TIMESTAMP") @map("date_added")
  dateModified   String?         @default("CURRENT_TIMESTAMP") @map("date_modified")
  apr            String          @default("10")
  contact        Person          @relation(fields: [contactId], references: [id], onDelete: Cascade)
  deals          Deal[]          @relation("deal_creditorTocreditor")
  defaultCharges DefaultCharge[] @relation("default_charge_creditorTocreditor")

  @@unique([businessName, contactId], map: "unique_business_contact")
  @@map("creditor")
}

model Deal {
  id           String         @id
  state        Int            @default(1)
  date         String
  accountId    String         @map("account")
  inventoryId  String         @map("inventory")
  creditorId   String?        @map("creditor")
  cash         String
  down         String?        @default("0")
  apr          String
  finance      String?
  lien         String?
  pmt          String?
  term         String
  taxCity      String?        @map("tax_city")
  taxState     String?        @map("tax_state")
  taxCounty    String?        @map("tax_county")
  taxRtd       String?        @map("tax_rtd")
  account      Account        @relation("deal_accountToaccount", fields: [accountId], references: [id], onDelete: Cascade)
  creditor     Creditor?      @relation("deal_creditorTocreditor", fields: [creditorId], references: [id], onDelete: Cascade, onUpdate: SetNull)
  inventory    Inventory      @relation("deal_inventoryToinventory", fields: [inventoryId], references: [vin], onDelete: Cascade)
  dealCharges  DealCharge[]   @relation("deal_charge_dealTodeal")
  dealSalsemen DealSalesman[] @relation("deal_salesman_dealTodeal")
  dealTrades   DealTrade[]    @relation("deal_trade_dealTodeal")
  payments     Payment[]      @relation("payment_dealTodeal")

  @@unique([date, accountId, inventoryId], map: "sqlite_autoindex_deal_2")
  @@map("deal")
}

model DealCharge {
  dealId   String? @map("deal")
  chargeId String? @map("charge")
  date     String?
  note     String?
  id       String  @id
  deal     Deal?   @relation("deal_charge_dealTodeal", fields: [dealId], references: [id], onDelete: Cascade)
  charge   Charge? @relation("deal_charge_chargeTocharge", fields: [chargeId], references: [id], onDelete: Cascade)

  @@map("deal_charge")
}

model DealSalesman {
  id         String   @id
  dealId     String   @map("deal")
  salesmanId String   @map("salesman")
  salesman   Salesman @relation("deal_salesman_salesmanTosalesman", fields: [salesmanId], references: [contactId], onDelete: Cascade)
  deal       Deal     @relation("deal_salesman_dealTodeal", fields: [dealId], references: [id], onDelete: Cascade)

  @@unique([dealId, salesmanId], map: "sqlite_autoindex_deal_salesman_2")
  @@map("deal_salesman")
}

model DealTrade {
  id        String    @id
  dealId    String    @map("deal")
  vin       String
  value     String
  inventory Inventory @relation(fields: [vin], references: [vin], onDelete: Cascade)
  deal      Deal      @relation("deal_trade_dealTodeal", fields: [dealId], references: [id], onDelete: Cascade)

  @@unique([dealId, vin], map: "sqlite_autoindex_deal_trade_2")
  @@map("deal_trade")
}

model DefaultCharge {
  id         String   @id
  creditorId String   @map("creditor")
  chargeId   String   @map("charge")
  creditor   Creditor @relation("default_charge_creditorTocreditor", fields: [creditorId], references: [businessName], onDelete: Cascade)
  charge     Charge   @relation("default_charge_chargeTocharge", fields: [chargeId], references: [id], onDelete: Cascade)

  @@unique([creditorId, chargeId], map: "sqlite_autoindex_default_charge_2")
  @@map("default_charge")
}

model Inventory {
  id           String      @id
  vin          String      @unique(map: "sqlite_autoindex_inventory_2")
  year         String
  make         String
  model        String?
  body         String?
  color        String?
  fuel         String?
  cwt          String?
  mileage      String?
  dateAdded    String?     @default("CURRENT_TIMESTAMP") @map("date_added")
  dateModified String?     @default("CURRENT_TIMESTAMP") @map("date_modified")
  picture      String?
  cash         String?
  credit       String?
  down         String?
  state        Int         @default(1)
  deals        Deal[]      @relation("deal_inventoryToinventory")
  dealTrades   DealTrade[]

  @@map("inventory")
}

model Payment {
  id     String @id
  dealId String @map("deal")
  date   String @default("CURRENT_TIMESTAMP")
  amount String
  deal   Deal   @relation("payment_dealTodeal", fields: [dealId], references: [id], onDelete: Cascade)

  @@unique([dealId, date, amount], map: "sqlite_autoindex_payment_2")
  @@map("payment")
}

model Person {
  id             String     @id
  namePrefix     String?    @map("name_prefix")
  firstName      String     @map("first_name")
  middleInitial  String?    @map("middle_initial")
  lastName       String     @map("last_name")
  nameSuffix     String?    @map("name_suffix")
  address_1      String
  address_2      String?
  address_3      String?
  city           String     @default("Fort Morgan")
  stateProvince  String     @default("CO") @map("state_province")
  zipPostal      String     @default("80701") @map("zip_postal")
  zip_4          String?
  country        String     @default("US")
  phonePrimary   String     @map("phone_primary")
  phoneSecondary String?    @map("phone_secondary")
  phoneTertiary  String?    @map("phone_tertiary")
  emailPrimary   String?    @map("email_primary")
  emailSecondary String?    @map("email_secondary")
  account        Account?
  creditor       Creditor[]
  salesman       Salesman?  @relation("salesman_personToperson")

  @@unique([lastName, firstName, address_1], map: "sqlite_autoindex_person_2")
  @@map("person")
}

model Salesman {
  id           String         @id
  contactId    String         @unique(map: "sqlite_autoindex_salesman_2") @map("person")
  dealSalesmen DealSalesman[] @relation("deal_salesman_salesmanTosalesman")
  contact      Person         @relation("salesman_personToperson", fields: [contactId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("salesman")
}

model key {
  id       String @id @unique(map: "key_id_uindex")
  key      String
  value    String
  business String

  @@unique([key, business], map: "key_key_business_uindex")
}
